(self.webpackChunk_graphql_codegen_website=self.webpackChunk_graphql_codegen_website||[]).push([[1340],{35318:function(e,t,r){"use strict";r.d(t,{Zo:function(){return s},kt:function(){return d}});var n=r(27378);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=p(r),d=a,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return r?n.createElement(f,l(l({ref:t},s),{},{components:r})):n.createElement(f,l({ref:t},s))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},79743:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return l},metadata:function(){return i},toc:function(){return c},default:function(){return s}});var n=r(29603),a=r(50120),o=(r(27378),r(35318)),l={id:"apollo-local-state",title:"Apollo Local State"},i={unversionedId:"integrations/apollo-local-state",id:"integrations/apollo-local-state",isDocsHomePage:!1,title:"Apollo Local State",description:"If you are using apollo-client >2.5 (or older, with apollo-link-state) to manage your app state with GraphQL, you're probably using a client-side only GraphQL schema and client-side directives such as @client.",source:"@site/docs/integrations/apollo-local-state.md",sourceDirName:"integrations",slug:"/integrations/apollo-local-state",permalink:"/docs/integrations/apollo-local-state",editUrl:"https://github.com/dotansimha/graphql-code-generator/edit/master/website/docs/integrations/apollo-local-state.md",version:"current",frontMatter:{id:"apollo-local-state",title:"Apollo Local State"},sidebar:"sidebar",previous:{title:"graphql-modules",permalink:"/docs/presets/graphql-modules"},next:{title:"Create-React-App",permalink:"/docs/integrations/create-react-app"}},c=[],p={toc:c};function s(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"If you are using ",(0,o.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/react/v2/data/local-state/"},"apollo-client")," >2.5 (or older, with ",(0,o.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/link/links/state.html"},"apollo-link-state"),") to manage your app state with GraphQL, you're probably using a client-side only GraphQL schema and client-side directives such as ",(0,o.kt)("inlineCode",{parentName:"p"},"@client"),"."),(0,o.kt)("p",null,"These types and directives are not part of your remote GraphQL schema."),(0,o.kt)("p",null,"For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"query myQuery {\n  todos {\n    id\n    title\n    checked\n    selected @client\n  }\n}\n")),(0,o.kt)("p",null,"If you wish to get better integration and fully type-safe types for your client-side schema as well, you can create a ",(0,o.kt)("inlineCode",{parentName:"p"},".graphql")," file for your local schema, for example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"type Todo {\n  selected: Boolean!\n}\n")),(0,o.kt)("p",null,"And then, you can merge this part of the schema with your remote schema, by specifying it as part of your ",(0,o.kt)("inlineCode",{parentName:"p"},"schema")," field:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"schema:\n  - http://my-remote-schema/graphql\n  - my-client-schema.graphql\n")),(0,o.kt)("p",null,"This way, the GraphQL Code Generator will generate complete typings that matches both your client fields and server fields."))}s.isMDXComponent=!0}}]);