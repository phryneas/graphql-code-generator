(self.webpackChunk_graphql_codegen_website=self.webpackChunk_graphql_codegen_website||[]).push([[316],{35318:function(e,n,t){"use strict";t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(27378);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),g=p(t),d=o,m=g["".concat(c,".").concat(d)]||g[d]||u[d]||a;return t?r.createElement(m,i(i({ref:n},s),{},{components:t})):r.createElement(m,i({ref:n},s))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=g;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},46173:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return c},default:function(){return s}});var r=t(29603),o=t(50120),a=(t(27378),t(35318)),i={id:"reason-client",title:"Reason Client"},l={unversionedId:"plugins/reason-client",id:"plugins/reason-client",isDocsHomePage:!1,title:"Reason Client",description:"Built and maintained by kgoggin",source:"@site/docs/plugins/reason-client.md",sourceDirName:"plugins",slug:"/plugins/reason-client",permalink:"/docs/plugins/reason-client",editUrl:"https://github.com/dotansimha/graphql-code-generator/edit/master/website/docs/plugins/reason-client.md",version:"current",frontMatter:{id:"reason-client",title:"Reason Client"},sidebar:"sidebar",previous:{title:"Flow Operations",permalink:"/docs/plugins/flow-operations"},next:{title:"Kotlin",permalink:"/docs/plugins/kotlin"}},c=[{value:"Installation",id:"installation",children:[]},{value:"Examples",id:"examples",children:[]},{value:"Usage &amp; Documentation",id:"usage--documentation",children:[]}],p={toc:c};function s(e){var n=e.components,t=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Built and maintained by ",(0,a.kt)("a",{parentName:"em",href:"https://github.com/kgoggin"},"kgoggin"))),(0,a.kt)("p",null,"A plugin for GraphQL Codegen to generate ReasonML types based on your GraphQL schema for use in a client application."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add -D graphql-codegen-reason-client\n")),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("p",null,"Set up your project per the GraphQL Codegen Docs, and specify this plugin in your codegen.yml:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"schema: http://path.to.your.app\ngenerates:\n  src/GraphQLTypes.re:\n    - reason-client\n")),(0,a.kt)("h2",{id:"usage--documentation"},"Usage & Documentation"),(0,a.kt)("p",null,"For the complete documentation, please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kgoggin/graphql-codegen-reason"},"kgoggin/graphql-codegen-reason")," repository."))}s.isMDXComponent=!0}}]);