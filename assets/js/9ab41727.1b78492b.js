(self.webpackChunk_graphql_codegen_website=self.webpackChunk_graphql_codegen_website||[]).push([[2816],{35318:function(e,n,t){"use strict";t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(27378);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),u=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(p.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(t),m=o,g=d["".concat(p,".").concat(m)]||d[m]||s[m]||a;return t?r.createElement(g,l(l({ref:n},c),{},{components:t})):r.createElement(g,l({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=d;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var u=2;u<a;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},58205:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return l},metadata:function(){return i},toc:function(){return p},default:function(){return c}});var r=t(29603),o=t(50120),a=(t(27378),t(35318)),l={},i={unversionedId:"plugins/java-installation",id:"plugins/java-installation",isDocsHomePage:!1,title:"java-installation",description:"To use the GraphQL Code Generator with Java, start by adding the com.moowork.node Gradle plugin to your build.gradle:",source:"@site/docs/plugins/java-installation.md",sourceDirName:"plugins",slug:"/plugins/java-installation",permalink:"/docs/plugins/java-installation",editUrl:"https://github.com/dotansimha/graphql-code-generator/edit/master/website/docs/plugins/java-installation.md",version:"current",frontMatter:{}},p=[],u={toc:p};function c(e){var n=e.components,t=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"To use the GraphQL Code Generator with Java, start by adding the ",(0,a.kt)("a",{parentName:"p",href:"https://plugins.gradle.org/plugin/com.moowork.node"},"com.moowork.node")," Gradle plugin to your ",(0,a.kt)("inlineCode",{parentName:"p"},"build.gradle"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'plugins {\n  id "com.moowork.node" version "1.3.1"\n}\n')),(0,a.kt)("p",null,"Then, add the following in order to make sure you are running the code-generator on each build:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"build.dependsOn yarn\n")),(0,a.kt)("p",null,"Then, create a ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," file in your project root, with the following content:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "java-app",\n  "scripts": {\n    "postinstall": "graphql-codegen"\n  },\n  "dependencies": {\n    "graphql": "14.5.8",\n    "@graphql-codegen/cli": "1.7.0",\n    "@graphql-codegen/RELEVANT_PLUGIN": "1.7.0"\n  }\n}\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Make sure to use the latest version of codegen and the plugins, and replace ",(0,a.kt)("inlineCode",{parentName:"p"},"RELEVANT_PLUGIN")," with your plugin name.")),(0,a.kt)("p",null,"Then, create ",(0,a.kt)("inlineCode",{parentName:"p"},"codegen.yml")," file in your root directory, pointing to your schema, and add the plugins you need. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"schema: src/main/resources/schema.graphqls\ngenerates:\n  src/main/java/com/my-name/my-app/generated/File.java:\n    - RELEVANT_PLUGIN\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Replace ",(0,a.kt)("inlineCode",{parentName:"p"},"RELEVANT_PLUGIN")," with your plugin name.")),(0,a.kt)("p",null,"Also, make sure you add the following to your ",(0,a.kt)("inlineCode",{parentName:"p"},".gitignore")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn.lock\nnode_modules\n")),(0,a.kt)("p",null,"Now, run ",(0,a.kt)("inlineCode",{parentName:"p"},"gradle yarn")," to install the dependencies for the first time."),(0,a.kt)("p",null,"Next time, the codegen will run automatically each time you run your Gradle build script."))}c.isMDXComponent=!0}}]);