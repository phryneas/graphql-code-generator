(self.webpackChunk_graphql_codegen_website=self.webpackChunk_graphql_codegen_website||[]).push([[4332],{35318:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return s}});var r=n(27378);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var a=r.createContext({}),c=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(a.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,a=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),g=c(n),s=i,d=g["".concat(a,".").concat(s)]||g[s]||f[s]||l;return n?r.createElement(d,o(o({ref:t},p),{},{components:n})):r.createElement(d,o({ref:t},p))}));function s(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,o=new Array(l);o[0]=g;var u={};for(var a in t)hasOwnProperty.call(t,a)&&(u[a]=t[a]);u.originalType=e,u.mdxType="string"==typeof e?e:i,o[1]=u;for(var c=2;c<l;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},24617:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return u},toc:function(){return a},default:function(){return p}});var r=n(29603),i=n(50120),l=(n(27378),n(35318)),o={id:"config-field",title:"`config` field"},u={unversionedId:"getting-started/config-field",id:"getting-started/config-field",isDocsHomePage:!1,title:"`config` field",description:"The config field is used to pass configuration to Plugins. You can specify it in multiple levels of your .yml file.",source:"@site/docs/getting-started/config-field.md",sourceDirName:"getting-started",slug:"/getting-started/config-field",permalink:"/docs/getting-started/config-field",editUrl:"https://github.com/dotansimha/graphql-code-generator/edit/master/website/docs/getting-started/config-field.md",version:"current",frontMatter:{id:"config-field",title:"`config` field"},sidebar:"sidebar",previous:{title:"`documents` field",permalink:"/docs/getting-started/documents-field"},next:{title:"`require` field",permalink:"/docs/getting-started/require-field"}},a=[{value:"Root Level",id:"root-level",children:[]},{value:"Output Level",id:"output-level",children:[]},{value:"Plugin Level",id:"plugin-level",children:[]}],c={toc:a};function p(e){var t=e.components,n=(0,i.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"config")," field is used to pass configuration to Plugins. You can specify it in multiple levels of your ",(0,l.kt)("inlineCode",{parentName:"p"},".yml")," file."),(0,l.kt)("p",null,"It's a basic key-value map."),(0,l.kt)("h3",{id:"root-level"},"Root Level"),(0,l.kt)("p",null,"If you specify it in your root level, every plugin for each output file will get the config value:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yml"},"schema: schema.graphql\nconfig:\n  configKey: configValue\ngenerates:\n  output.ts:\n    - plugin1\n    - plugin2\n")),(0,l.kt)("h3",{id:"output-level"},"Output Level"),(0,l.kt)("p",null,"If you specify it at the output file level, every plugin for specific output will get the config value:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yml"},"schema: schema.graphql\ngenerates:\n  output.ts:\n    config:\n      configKey: configValue\n    plugins:\n      - plugin1\n      - plugin2\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Output level configuration overrides root level configuration.")),(0,l.kt)("h3",{id:"plugin-level"},"Plugin Level"),(0,l.kt)("p",null,"If you specify it at the plugin level, only that plugin will get the config value:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yml"},"schema: schema.graphql\ngenerates:\n  output.ts:\n    - plugin1:\n        configKey: configValue\n    - plugin2:\n        configKey: otherValue\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Plugin level configuration overrides output-level and root-level configuration.")))}p.isMDXComponent=!0}}]);