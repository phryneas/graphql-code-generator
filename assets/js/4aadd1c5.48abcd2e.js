(self.webpackChunk_graphql_codegen_website=self.webpackChunk_graphql_codegen_website||[]).push([[2231],{35318:function(e,n,t){"use strict";t.d(n,{Zo:function(){return s},kt:function(){return d}});var a=t(27378);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),c=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=c(e.components);return a.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(t),d=r,g=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return t?a.createElement(g,i(i({ref:n},s),{},{components:t})):a.createElement(g,i({ref:n},s))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=u;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},80375:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p},default:function(){return s}});var a=t(29603),r=t(50120),o=(t(27378),t(35318)),i={},l={unversionedId:"generated-config/fragment-matcher",id:"generated-config/fragment-matcher",isDocsHomePage:!1,title:"fragment-matcher",description:"This plugin generates an introspection file but only with Interfaces and Unions, based on your GraphQLSchema.",source:"@site/docs/generated-config/fragment-matcher.md",sourceDirName:"generated-config",slug:"/generated-config/fragment-matcher",permalink:"/docs/generated-config/fragment-matcher",editUrl:"https://github.com/dotansimha/graphql-code-generator/edit/master/website/docs/generated-config/fragment-matcher.md",version:"current",frontMatter:{}},p=[{value:"Installation",id:"installation",children:[]},{value:"API Reference",id:"api-reference",children:[{value:"<code>module</code>",id:"module",children:[]},{value:"<code>apolloClientVersion</code>",id:"apolloclientversion",children:[]},{value:"<code>useExplicitTyping</code>",id:"useexplicittyping",children:[]},{value:"<code>federation</code>",id:"federation",children:[]}]}],c={toc:p};function s(e){var n=e.components,t=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This plugin generates an introspection file but only with Interfaces and Unions, based on your GraphQLSchema."),(0,o.kt)("p",null,"If you are using ",(0,o.kt)("inlineCode",{parentName:"p"},"apollo-client")," and your schema contains ",(0,o.kt)("inlineCode",{parentName:"p"},"interface")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"union")," declaration, it's recommended to use Apollo's Fragment Matcher and the result generated by the plugin."),(0,o.kt)("p",null,"You can read more about it in ",(0,o.kt)("inlineCode",{parentName:"p"},"apollo-client")," documentation: ",(0,o.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/react/data/fragments/#fragments-on-unions-and-interfaces"},"https://www.apollographql.com/docs/react/data/fragments/#fragments-on-unions-and-interfaces"),"."),(0,o.kt)("p",null,"Fragment Matcher plugin accepts a TypeScript / JavaScript or a JSON file as an output ",(0,o.kt)("em",{parentName:"p"},"(",(0,o.kt)("inlineCode",{parentName:"em"},".ts, .tsx, .js, .jsx, .json"),")"),"."),(0,o.kt)("p",null,"Both in TypeScript and JavaScript a default export is being used."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The output is based on the output you choose for the output file name.")),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("img",{alt:"fragment-matcher plugin version",src:"https://img.shields.io/npm/v/@graphql-codegen/fragment-matcher?color=%23e15799&label=plugin\xa0version&style=for-the-badge"}),(0,o.kt)("div",{className:"admonition admonition-shell"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16pt",height:"16pt",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",d:"M0 0v16h16V0zm15.063 15.063H.937v-11h14.126zm0-11.938H.937V.937h14.126zm0 0"}),(0,o.kt)("path",{parentName:"svg",d:"M1.875 1.563h.938V2.5h-.938zm0 0M3.438 1.563h.937V2.5h-.938zm0 0M5 1.563h.938V2.5H5zm0 0M1.875 5.074v1.348l.988.637-.988.578V9.05l2.828-1.668v-.586zm0 0M5.34 7.559h1.027v1.226H5.34zm0 0M5.34 5.32h1.027v1.23H5.34zm0 0M6.8 8.785h2.356v1.137H6.801zm0 0"}))),"Using ",(0,o.kt)("inlineCode",{parentName:"h5"},"yarn"))),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre"},"yarn add -D @graphql-codegen/fragment-matcher\n")))),(0,o.kt)("h2",{id:"api-reference"},"API Reference"),(0,o.kt)("h3",{id:"module"},(0,o.kt)("inlineCode",{parentName:"h3"},"module")),(0,o.kt)("p",null,"type: ",(0,o.kt)("inlineCode",{parentName:"p"},"string (values: commonjs, es2015)"),"\ndefault: ",(0,o.kt)("inlineCode",{parentName:"p"},"es2015")),(0,o.kt)("p",null,"Compatible only with JSON extension, allow you to choose the export type, either ",(0,o.kt)("inlineCode",{parentName:"p"},"module.exports")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"export default"),".  Allowed values are: ",(0,o.kt)("inlineCode",{parentName:"p"},"commonjs"),",  ",(0,o.kt)("inlineCode",{parentName:"p"},"es2015"),"."),(0,o.kt)("h4",{id:"usage-examples"},"Usage Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"generates:\npath/to/file.json:\n plugins:\n   - fragment-matcher\n config:\n   module: commonjs\n")),(0,o.kt)("h3",{id:"apolloclientversion"},(0,o.kt)("inlineCode",{parentName:"h3"},"apolloClientVersion")),(0,o.kt)("p",null,"type: ",(0,o.kt)("inlineCode",{parentName:"p"},"number (values: 2, 3)"),"\ndefault: ",(0,o.kt)("inlineCode",{parentName:"p"},"3")),(0,o.kt)("p",null,"Compatible only with TS/TSX/JS/JSX extensions, allow you to generate output based on your Apollo-Client version. Valid values are: ",(0,o.kt)("inlineCode",{parentName:"p"},"2"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"3"),"."),(0,o.kt)("h4",{id:"usage-examples-1"},"Usage Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"generates:\npath/to/file.ts:\n plugins:\n   - fragment-matcher\n config:\n   apolloClientVersion: 3\n")),(0,o.kt)("h3",{id:"useexplicittyping"},(0,o.kt)("inlineCode",{parentName:"h3"},"useExplicitTyping")),(0,o.kt)("p",null,"type: ",(0,o.kt)("inlineCode",{parentName:"p"},"boolean"),"\ndefault: ",(0,o.kt)("inlineCode",{parentName:"p"},"false")),(0,o.kt)("p",null,"Create an explicit type based on your schema. This can help IDEs autofill your fragment matcher. This is mostly useful if you do more with your fragment matcher than just pass it to an Apollo-Client."),(0,o.kt)("h4",{id:"usage-examples-2"},"Usage Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},"generates:\npath/to/file.ts:\n plugins:\n   - fragment-matcher\n config:\n   useExplicitTyping: true\n")),(0,o.kt)("h3",{id:"federation"},(0,o.kt)("inlineCode",{parentName:"h3"},"federation")),(0,o.kt)("p",null,"type: ",(0,o.kt)("inlineCode",{parentName:"p"},"boolean")))}s.isMDXComponent=!0}}]);