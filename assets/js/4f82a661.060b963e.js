(self.webpackChunk_graphql_codegen_website=self.webpackChunk_graphql_codegen_website||[]).push([[3289],{35318:function(e,t,r){"use strict";r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(27378);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(r),m=a,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},17747:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p},default:function(){return c}});var n=r(29603),a=r(50120),o=(r(27378),r(35318)),i={id:"presets-index",title:"All Presets"},l={unversionedId:"presets/presets-index",id:"presets/presets-index",isDocsHomePage:!1,title:"All Presets",description:"GraphQL Code Generator also support presets - which is a way to manipulate and affect the execution of plugins.",source:"@site/docs/presets/index.md",sourceDirName:"presets",slug:"/presets/presets-index",permalink:"/docs/presets/presets-index",editUrl:"https://github.com/dotansimha/graphql-code-generator/edit/master/website/docs/presets/index.md",version:"current",frontMatter:{id:"presets-index",title:"All Presets"},sidebar:"sidebar",previous:{title:"Relay Operation Optimizer",permalink:"/docs/plugins/relay-operation-optimizer"},next:{title:"near-operation-file",permalink:"/docs/presets/near-operation-file"}},p=[{value:"Available Presets",id:"available-presets",children:[]}],s={toc:p};function c(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"GraphQL Code Generator also support presets - which is a way to manipulate and affect the execution of plugins."),(0,o.kt)("p",null,"Presets are CLI extensions, that allow manipulation of a ",(0,o.kt)("inlineCode",{parentName:"p"},"generates")," section of codegen, based on custom logic."),(0,o.kt)("p",null,"You can use and writes presets to tell codegen which output files to creates, and what each one should include."),(0,o.kt)("h2",{id:"available-presets"},"Available Presets"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Purpose"),(0,o.kt)("th",{parentName:"tr",align:null},"Package Name & Docs"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"near-operation-file")),(0,o.kt)("td",{parentName:"tr",align:null},"Generates operation code near the source file"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/presets/near-operation-file"},(0,o.kt)("inlineCode",{parentName:"a"},"@graphql-codegen/near-operation-file-preset")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"import-types-")),(0,o.kt)("td",{parentName:"tr",align:null},"Allow you to separate base types declarations and the operations that uses it"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/presets/import-types"},(0,o.kt)("inlineCode",{parentName:"a"},"@graphql-codegen/import-types-preset")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"graphql-modules")),(0,o.kt)("td",{parentName:"tr",align:null},"Generates types and resolvers signature for GraphQL-Modules"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/presets/graphql-modules"},(0,o.kt)("inlineCode",{parentName:"a"},"@graphql-codegen/graphql-modules-preset")))))))}c.isMDXComponent=!0}}]);